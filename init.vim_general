
" TODO
"
" capital D and X to store in 'black hole' register
" annul the effects of Caps-Lock

" Disabling keys
	"map <right> <nop>
	"map <up>    <nop>
	"map <left>  <nop>
	"map <down>  <nop>
	"map <esc>   <nop>

" Statusline
	"set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
	" Set status line always on
	set laststatus=2
	" Filename and location
	set statusline +=%F%m%r%h%w
	" unix file format
	"set statusline +=\ [FORMAT=%{&ff}]
	" type = vim
	"set statusline +=\ [TYPE=%Y]
	" ASCII value of char under cursur
	"set statusline +=\ [ASCII=\%03.3b]
	" HEX (ASCII?) value of char under cursur
	"set statusline +=\ [HEX=\%02.2B]
	" position in the file
	set statusline +=\ [POS=%04l,%04v][%p%%]
	" length of file
	set statusline +=\ [LEN=%L]

" statusline coloring
" https://stackoverflow.com/questions/9065941/how-can-i-change-vim-status-line-color
function! InsertStatuslineColor(mode)
	if     a:mode == 'i'
		" insert mode
		"echom "insert mode"
	   hi statusline guifg=Black guibg=Cyan	 ctermfg=0 ctermbg=32
	"elseif a:mode == 'r'
	elseif a:mode == 'n'
		" normal mode
		"echom "normal mode"
		hi statusline guifg=Black guibg=Purple  ctermfg=0 ctermbg=22
	"elseif or(a:mode=='v', a:mode=='V')
	elseif a:mode=='v' || a:mode=='V'
		" visual mode
		"echom "visual mode"
		hi statusline guifg=Black guibg=DarkRed ctermfg=0 ctermbg=88
	else
		"echom "other mode"
		hi statusline guifg=White guibg=DarkGrey ctermfg=8 ctermbg=16
	endif
endfunction

au InsertEnter * call InsertStatuslineColor(v:insertmode)
"au InsertLeave * hi statusline guifg=White guibg=DarkGrey ctermfg=8 ctermbg=16
"au InsertEnter,InsertLeave,BufEnter,CmdwinEnter,CmdwinLeave * call InsertStatuslineColor(v:insertmode)
"au InsertEnter,InsertLeave,BufEnter,CmdwinEnter,CmdwinLeave * call InsertStatuslineColor(mode())
"au InsertEnter,InsertLeave,BufEnter,CmdwinEnter,CmdwinLeave * call InsertStatuslineColor(execute ":mode()\<cr>")
"au InsertLeave * call InsertStatuslineColor(mode())
au InsertLeave,BufEnter,CmdwinEnter,CmdwinLeave * call InsertStatuslineColor(mode())


" default the statusline to green when entering Vim
"hi statusline guifg=White guibg=DarkGrey ctermfg=23 ctermbg=16
"hi statusline guifg=Red guibg=Black ctermfg=23 ctermbg=16
"au BufLeave,FocusLost hi statusline guifg=Red guibg=Black ctermfg=23 ctermbg=16
au BufLeave,FocusLost,BufNewFile,BufReadPre,BufReadPost,BufRead,BufReadCmd,BufAdd,BufCreate,BufNew,WinLeave hi statusline guifg=White guibg=DarkGrey ctermfg=8 ctermbg=16
"au BufEnter hi statusline guifg=Red guibg=Black ctermfg=23 ctermbg=16
"au TextYankPost conky registers


" Syntax coloring
   syn on
   colo koehler
   "colo evening
   "colo slate

" when echo-ing messages, disable the "-- More -- SPACE/d/j: screen/page/line down, b/u/k: up, q: quit "
	set nomore


" Line numbering
   set number
   set relativenumber

" line-break instead of line-wrapping
   set linebreak

" Create margins at top and bottom
   " http://stackoverflow.com/questions/22283958/vim-scroll-below-the-end-of-the-document
   " this option creates margins at the top and bottom of the screen
   " so that when you veer too close to the top or bottom of screen, the text shifts accordingly
   set scrolloff=7

" Tab spacing and format
   "set tabstop=3
   "set shiftwidth=3
   set softtabstop=0 noexpandtab
   "set tabstop=3 softtabstop=0 expandtab shiftwidth=3 smarttab
   set tabstop=3 softtabstop=0 shiftwidth=3 smarttab
	set autoindent

" Highlight cursor row and column
   " From: http://stackoverflow.com/questions/4775605/vim-syntax-highlight-improve-performance
	" :help highlight-args
	"
   "set nocursorcolumn
   "set nocursorline
   set cursorcolumn
   set cursorline
		"hi CursorLine   ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
		"highlight CursorLine term=bold cterm=bold guibg=Grey40
   "highlight CursorLine term=NONE cterm=NONE ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
	"
	" OLD
   "highlight CursorLine term=NONE cterm=NONE ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
   highlight CursorLine term=NONE cterm=nocombine ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
	
	" highlight line numbers
	highlight LineNr       term=bold cterm=NONE ctermfg=White ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
	highlight CursorLineNr term=bold cterm=NONE ctermfg=White ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
	"highlight LineNr       term=bold cterm=NONE ctermfg=Red ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
	"highlight CursorLineNr term=bold cterm=NONE ctermfg=Red ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
   "highlight LineNr       term=NONE cterm=nocombine ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
   "highlight CursorLineNr term=NONE cterm=nocombine ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
	"
	" Example:
	"highlight CursorLine term=NONE start=<Esc>[27h;<Esc>[<Space>r; cterm=NONE ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
	"
	"
		"highlight CursorLine term=bold cterm=bold ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
		"hi CursorColumn ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
		"hi CursorColumn term=bold cterm=bold ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
	"hi CursorColumn term=NONE cterm=NONE ctermbg=8  ctermfg=15 " NONE->no underline 8->dark grey, 15->white
	"
	" OLD
   "hi CursorColumn term=NONE cterm=NONE ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white
   hi CursorColumn term=NONE cterm=nocombine ctermbg=3  ctermfg=Black " NONE->no underline 8->dark grey, 15->white, nocombine=colorscheme off
	"
   hi Cursor       ctermbg=15 ctermfg=8  " 8->dark grey, 15->white
   "hi Cursor    term=bold cterm=bold   ctermbg=15 ctermfg=8  " 8->dark grey, 15->white
	"hi Cursor    term=standout cterm=standout   ctermbg=15 ctermfg=8  " 8->dark grey, 15->white
	"
	hi Visual ctermbg=15 ctermfg=8

" Shortcutting split navigation, saving a keypress:
	map <C-h> <C-w>h
	map <C-j> <C-w>j
	map <C-k> <C-w>k
	map <C-l> <C-w>l

" Folding
	set foldmethod=marker

" For file explorer
   "let g:netrw_bufsettings = 'noma nomod nu nowrap ro nobl'
   let g:netrw_bufsettings = 'noma nomod relativenumber nu nowrap ro nobl'


" For speed improvement
   " from: http://www.sbf5.com/~cduan/download/?file=cduan.vim
   set mouse=
   "set showmatch
   set noshowmatch
   "set norelativenumber
   "syntax sync minlines=256
   syn sync maxlines=2
   syn sync minlines=1
   "syntax sync minlines=1
   "syntax sync maxlines=5
   "
   " From: https://www.reddit.com/r/vim/comments/3jdxln/is_using_vim_on_a_raspberry_pi_in_raspbian_a_good/
   " From: http://stackoverflow.com/questions/16902317/vim-slow-with-ruby-syntax-highlighting
   "set re=1
   "set regexpengine=1
   set ttyfast
   "set lazyredraw
   "
   " From: http://vim.1045645.n5.nabble.com/Slow-Syntax-Highlighting-with-Latex-td5716260.html
   let g:tex_fast= ""
   "
   " http://stackoverflow.com/questions/34675677/disable-highlight-matched-parentheses-in-vim-let-loaded-matchparen-1-not-w
   "set noshowmatch
   se nosm
   let loaded_matchparen = 1


" File encoding
   set encoding=utf-8


" personal mappings
"let mapleader = "--"
let mapleader = "\<C-L>"

" edit and reload .vimrc file
   nnoremap <leader>ev :vsplit $MYVIMRC<cr>
   nnoremap <leader>Ev :split  $MYVIMRC<cr>
   nnoremap <leader>sv :source $MYVIMRC<cr>

"nnoremap <leader>S :split | :setlocal nu

" Escape sequences
   imap <F11> <esc>
   "inoremap <leader>l <esc>
   inoremap <leader><leader> <esc>
   vnoremap <leader><leader> <esc>
   "inoremap jk <esc>
   inoremap <Insert> <esc>
   " map Ctrl+Shift to <esc>
   "inoremap <C>

" Lock terminal
	nnoremap <leader><BS> :<c-u>!vlock<cr>

" disable PageUp and PageDown
   inoremap <PageUp> <esc>k
   inoremap <PageDown> <esc>j

" Save document
   inoremap <leader>w <esc>:w<cr>

" re-draw
	"inoremap <leader>r redraw!

" break line
	"nnoremap <C-a> i<cr><esc>

" Delete lines and chars to 'black hole' register
	nmap <leader>d "_
	"nnoremap X  "_x
	"noremap DD <leader>ddd



" From: http://vim.wikia.com/wiki/Compiling_LaTeX_from_Vim

let b:tex_flavor = 'pdflatex'
compiler tex
set makeprg=pdflatex\ \-file\-line\-error\ \-interaction=nonstopmode
set errorformat=%f:%l:\Â %m

